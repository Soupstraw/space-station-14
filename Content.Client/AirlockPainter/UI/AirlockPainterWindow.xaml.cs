using Content.Shared.AirlockPainter.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.AirlockPainter.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class AirlockPainterWindow : DefaultWindow
    {
        public event Action<string?>? OnSpritePicked;

        public AirlockPainterWindow(IPrototypeManager proto)
        {
            RobustXamlLoader.Load(this);

            SpriteList.OnItemSelected += e => OnSpritePicked?.Invoke(e.ItemList[e.ItemIndex].Text);

            HashSet<string> styles = new();
            var prototypes = proto.EnumeratePrototypes<AirlockGroupPrototype>();
            foreach (AirlockGroupPrototype p in prototypes)
            {
              foreach (string style in p.StylePaths.Keys)
              {
                styles.Add(style);
              }
            }
            foreach (string style in styles)
            {
              SpriteList.AddItem(style);
            }
        }
    }
}
